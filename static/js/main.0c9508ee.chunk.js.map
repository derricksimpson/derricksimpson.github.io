{"version":3,"sources":["components/core/LeftNav.js","components/core/SignIn.js","components/Logs.jsx","components/Title.js","components/core/Dashboard.js","components/Config.jsx","components/core/FileView.jsx","components/Files.jsx","components/core/Container.jsx","App.js","theme.js","serviceWorker.js","index.js"],"names":["leftNavItems","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","Copyright","Typography","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","Container","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","Grid","container","item","xs","Box","mt","Logs","props","useState","log","setLog","useEffect","Title","gutterBottom","children","root","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","fixedHeight","Dashboard","React","fixedHeightPaper","clsx","md","lg","Paper","src","Config","config","setConfig","useTreeItemStyles","text","action","hover","grey","fontWeight","typography","fontWeightMedium","fontWeightRegular","group","paddingLeft","expanded","selected","labelRoot","labelIcon","labelText","index","nextIndex","StyledTreeItem","childItems","LabelIcon","labelInfo","bgColor","other","console","TreeItem","style","map","child","key","FolderIcon","nodeId","FileView","files","setFiles","fetch","then","r","json","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","f","Files","setThing","MyContainer","open","setOpen","AppBar","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Badge","badgeContent","Drawer","Divider","List","disableGutters","exact","path","App","createMuiTheme","error","red","A400","background","default","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c9508ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport MessageIcon from '@material-ui/icons/Message'\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nexport const leftNavItems = (\r\n  <div>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n\r\n    <ListItem button component={Link} to=\"/files\">\r\n      <ListItemIcon>\r\n        <MessageIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Files\" />\r\n    </ListItem>\r\n\r\n\r\n    <ListItem button component={Link} to=\"/logs\">\r\n      <ListItemIcon>\r\n        <MessageIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Logs\" />\r\n    </ListItem>\r\n\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Stats\" />\r\n    </ListItem>\r\n    \r\n    <ListItem button component={Link} to=\"/config\">\r\n      <ListItemIcon>\r\n        <SettingsIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Config\" />\r\n    </ListItem>\r\n\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nexport default function Logs(props) {\r\n    \r\n    let [log, setLog] = useState('loading');\r\n\r\n    useEffect(() => {\r\n\r\n       setLog(' this is a fake log file.');\r\n       \r\n    },[]);\r\n\r\n    return (\r\n        <pre>\r\n            {log}\r\n        </pre>\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"secondary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './LeftNav';\r\n\r\nimport SignIn from './SignIn';\r\nimport Title from '../Title';\r\nimport Logs from '../Logs';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 220,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n\r\n    <Grid container spacing={3}>\r\n\r\n      <Grid item xs={12} md={8} lg={9}>\r\n        <Paper className={fixedHeightPaper}>\r\n          <Title>Software Versions</Title>\r\n          <div>\r\n            <pre>\r\n            Software: v0.12 <br />\r\n            Console API: v0.23\r\n            </pre>\r\n              <small>No pending UI or Software updates.</small>\r\n            </div>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={4} lg={3}>\r\n        <Paper className={fixedHeightPaper}>\r\n          Latest Snapshot\r\n          <img src=\"/pic.png\" height=\"150\" />\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <Typography>Latest Log Information</Typography>\r\n          <Logs />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Config(props) {\r\n    \r\n    let [config, setConfig] = useState('loading');\r\n\r\n    useEffect(() => {\r\n\r\n       \r\n         setConfig('what should be here?');\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <pre>\r\n            {config}\r\n        </pre>\r\n    );\r\n\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Label from '@material-ui/icons/Label';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport { useState } from 'react';\r\n\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        '&:hover > $content': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n        '&:focus > $content, &$selected > $content': {\r\n            backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[200]})`,\r\n            color: 'var(--tree-view-color)',\r\n        },\r\n        '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    content: {\r\n        color: theme.palette.text.secondary,\r\n        paddingRight: theme.spacing(1),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        '$expanded > &': {\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n    },\r\n    group: {\r\n        marginLeft: 0,\r\n       paddingLeft: theme.spacing(2),\r\n        \r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n        fontWeight: 'inherit',\r\n        color: 'inherit',\r\n    },\r\n    labelRoot: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0.5, 0),\r\n    },\r\n    labelIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n        fontWeight: 'inherit',\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nlet index = 0;\r\nfunction nextIndex() {\r\n    return ++index;\r\n}\r\n\r\nfunction StyledTreeItem(props) {\r\n\r\n    const classes = useTreeItemStyles();\r\n    const { childItems, labelText, labelIcon: LabelIcon, labelInfo, color, bgColor, ...other } = props;\r\n\r\n    console.log(childItems);\r\n\r\n    return (\r\n        <TreeItem\r\n            label={\r\n                <div className={classes.labelRoot}>\r\n                    <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n                    <Typography variant=\"body2\" className={classes.labelText}>\r\n                        {labelText}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" color=\"inherit\">\r\n                        {labelInfo}\r\n                    </Typography>\r\n                </div>\r\n            }\r\n            style={{\r\n                '--tree-view-color': color,\r\n                '--tree-view-bg-color': bgColor,\r\n            }}\r\n            classes={{\r\n                root: classes.root,\r\n                content: classes.content,\r\n                expanded: classes.expanded,\r\n                selected: classes.selected,\r\n                group: classes.group,\r\n                label: classes.label,\r\n            }}\r\n            {...other}\r\n        >\r\n            {childItems && childItems.map(child => <StyledTreeItem key={nextIndex()} labelIcon={FolderIcon} nodeId={nextIndex()} labelText={child.name} childItems={child.children} />)}\r\n        </TreeItem>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 264,\r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n    },\r\n});\r\n\r\nexport default function FileView(props) {\r\n    const classes = useStyles();\r\n    let [files, setFiles] = useState([\r\n        { name: 'File1'},\r\n        { name: 'File2'},\r\n        { name: 'File3'},\r\n    ]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch('./files.json').then(r => r.json()).then(files => {\r\n            setFiles(files)\r\n        });\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ArrowDropDownIcon />}\r\n            defaultExpandIcon={<ArrowRightIcon />}\r\n            defaultEndIcon={<div style={{ width: 32 }} />}\r\n        >\r\n            {files.map(f => <StyledTreeItem key={f.name} nodeId={nextIndex()} labelText={f.name} labelIcon={FolderIcon} childItems={f.children} />)}\r\n\r\n        </TreeView>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FileView from './core/FileView';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport default function Files(props) {\r\n    \r\n    let [thing, setThing] = useState('loading');\r\n\r\n    useEffect(() => {\r\n\r\n       \r\n         setThing('what should be here?');\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid item xs={12}><FileView /></Grid>\r\n        </Grid>\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { leftNavItems } from './LeftNav';\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport SignIn from './SignIn';\r\nimport Logs from '../Logs';\r\nimport Dashboard from './Dashboard';\r\nimport Config from '../Config';\r\nimport Files from '../Files';\r\nimport FileView from './FileView';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1, // Push nav bar right menu to the right (alert icon)\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(1),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(1),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    paddingLeft: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function MyContainer() {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n     \r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n            Logo Here?\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{leftNavItems}</List>\r\n      </Drawer>\r\n\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container disableGutters={true} className={classes.container}>\r\n\r\n          <Switch>\r\n            <Route exact path='/' component={Dashboard} />\r\n            <Route path='/login' component={SignIn} />\r\n            <Route path='/files' component={Files } />\r\n            <Route path='/logs' component={Logs} />\r\n            <Route path='/config' component={Config} />\r\n            \r\n          </Switch>\r\n        </Container>\r\n      </main>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Container from './components/core/Container';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1e88e5',\r\n    },\r\n    secondary: {\r\n      main: '#959595',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Dynamic Themeer https://codesandbox.io/s/interesting-leftpad-31y24\r\n\r\nReactDOM.render((\r\n    <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </ThemeProvider>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}